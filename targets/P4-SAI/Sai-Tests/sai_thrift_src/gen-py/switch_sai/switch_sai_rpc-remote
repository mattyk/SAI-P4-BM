#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from switch_sai import switch_sai_rpc
from switch_sai.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  sai_thrift_status_t sai_thrift_set_port_attribute(sai_thrift_object_id_t port_id, sai_thrift_attribute_t thrift_attr)')
  print('  sai_thrift_attribute_list_t sai_thrift_get_port_attribute(sai_thrift_object_id_t port_id)')
  print('   sai_thrift_get_port_stats(sai_thrift_object_id_t port_id,  counter_ids, i32 number_of_counters)')
  print('  sai_thrift_status_t sai_thrift_clear_port_all_stats(sai_thrift_object_id_t port_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_port( thrift_attr_list)')
  print('  sai_thrift_object_id_t sai_thrift_create_bridge( thrift_attr_list)')
  print('  sai_thrift_object_id_t sai_thrift_create_bridge_port( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_create_fdb_entry(sai_thrift_fdb_entry_t thrift_fdb_entry,  thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_delete_fdb_entry(sai_thrift_fdb_entry_t thrift_fdb_entry)')
  print('  sai_thrift_status_t sai_thrift_flush_fdb_entries( thrift_attr_list)')
  print('  sai_thrift_object_id_t sai_thrift_create_vlan( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_delete_vlan(sai_thrift_object_id_t vlan_id)')
  print('   sai_thrift_get_vlan_stats(sai_thrift_vlan_id_t vlan_id,  counter_ids, i32 number_of_counters)')
  print('  sai_thrift_object_id_t sai_thrift_create_vlan_member( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_vlan_member(sai_thrift_object_id_t vlan_member_id)')
  print('  sai_thrift_attribute_list_t sai_thrift_get_vlan_attribute(sai_thrift_object_id_t vlan_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_virtual_router( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_virtual_router(sai_thrift_object_id_t vr_id)')
  print('  sai_thrift_status_t sai_thrift_create_route(sai_thrift_unicast_route_entry_t thrift_unicast_route_entry,  thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_route(sai_thrift_unicast_route_entry_t thrift_unicast_route_entry)')
  print('  sai_thrift_object_id_t sai_thrift_create_router_interface( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_router_interface(sai_thrift_object_id_t rif_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_next_hop( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_next_hop(sai_thrift_object_id_t next_hop_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_next_hop_group( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_next_hop_group(sai_thrift_object_id_t next_hop_group_id)')
  print('  sai_thrift_status_t sai_thrift_add_next_hop_to_group(sai_thrift_object_id_t next_hop_group_id,  thrift_nexthops)')
  print('  sai_thrift_status_t sai_thrift_remove_next_hop_from_group(sai_thrift_object_id_t next_hop_group_id,  thrift_nexthops)')
  print('  sai_thrift_object_id_t sai_thrift_create_lag( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_lag(sai_thrift_object_id_t lag_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_lag_member( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_lag_member(sai_thrift_object_id_t lag_member_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_stp_entry( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_stp_entry(sai_thrift_object_id_t stp_id)')
  print('  sai_thrift_status_t sai_thrift_set_stp_port_state(sai_thrift_object_id_t stp_id, sai_thrift_object_id_t port_id, sai_thrift_port_stp_port_state_t stp_port_state)')
  print('  sai_thrift_port_stp_port_state_t sai_thrift_get_stp_port_state(sai_thrift_object_id_t stp_id, sai_thrift_object_id_t port_id)')
  print('  sai_thrift_status_t sai_thrift_create_neighbor_entry(sai_thrift_neighbor_entry_t thrift_neighbor_entry,  thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_neighbor_entry(sai_thrift_neighbor_entry_t thrift_neighbor_entry)')
  print('  sai_thrift_object_id_t sai_thrift_create_switch( thrift_attr_list)')
  print('  sai_thrift_attribute_list_t sai_thrift_get_switch_attribute( thrift_attr_list)')
  print('  sai_thrift_attribute_t sai_thrift_get_port_list_by_front_port()')
  print('  sai_thrift_object_id_t sai_thrift_get_cpu_port_id()')
  print('  sai_thrift_object_id_t sai_thrift_get_default_trap_group()')
  print('  sai_thrift_object_id_t sai_thrift_get_default_router_id()')
  print('  sai_thrift_object_id_t sai_thrift_get_port_id_by_front_port(string port_name)')
  print('  sai_thrift_status_t sai_thrift_set_switch_attribute(sai_thrift_attribute_t attribute)')
  print('  sai_thrift_object_id_t sai_thrift_create_hostif( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_hostif(sai_thrift_object_id_t hif_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_hostif_trap_group( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_hostif_trap_group(sai_thrift_object_id_t trap_group_id)')
  print('  sai_thrift_status_t sai_thrift_create_hostif_trap( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_hostif_trap(sai_thrift_hostif_trap_id_t trap_id)')
  print('  sai_thrift_status_t sai_thrift_set_hostif_trap(sai_thrift_hostif_trap_id_t trap_id, sai_thrift_attribute_t thrift_attr)')
  print('  sai_thrift_status_t sai_thrift_set_hostif_trap_group(sai_thrift_object_id_t trap_group_id, sai_thrift_attribute_t thrift_attr)')
  print('  sai_thrift_object_id_t sai_thrift_create_acl_table( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_delete_acl_table(sai_thrift_object_id_t acl_table_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_acl_entry( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_delete_acl_entry(sai_thrift_object_id_t acl_entry)')
  print('  sai_thrift_object_id_t sai_thrift_create_acl_counter( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_delete_acl_counter(sai_thrift_object_id_t acl_counter_id)')
  print('   sai_thrift_get_acl_counter_attribute(sai_thrift_object_id_t acl_counter_id,  thrift_attr_ids)')
  print('  sai_thrift_object_id_t sai_thrift_create_mirror_session( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_mirror_session(sai_thrift_object_id_t session_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_policer( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_policer(sai_thrift_object_id_t policer_id)')
  print('   sai_thrift_get_policer_stats(sai_thrift_object_id_t policer_id,  counter_ids)')
  print('  sai_thrift_object_id_t sai_thrift_create_scheduler_profile( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_scheduler_profile(sai_thrift_object_id_t scheduler_id)')
  print('   sai_thrift_get_queue_stats(sai_thrift_object_id_t queue_id,  counter_ids, i32 number_of_counters)')
  print('  sai_thrift_status_t sai_thrift_clear_queue_stats(sai_thrift_object_id_t queue_id,  counter_ids, i32 number_of_counters)')
  print('  sai_thrift_status_t sai_thrift_set_queue_attribute(sai_thrift_object_id_t queue_id, sai_thrift_attribute_t thrift_attr)')
  print('  sai_thrift_object_id_t sai_thrift_create_buffer_profile( thrift_attr_list)')
  print('  sai_thrift_object_id_t sai_thrift_create_pool_profile( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_set_priority_group_attribute(sai_thrift_object_id_t pg_id, sai_thrift_attribute_t thrift_attr)')
  print('   sai_thrift_get_pg_stats(sai_thrift_object_id_t pg_id,  counter_ids, i32 number_of_counters)')
  print('  sai_thrift_object_id_t sai_thrift_create_wred_profile( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_wred_profile(sai_thrift_object_id_t wred_id)')
  print('  sai_thrift_object_id_t sai_thrift_create_qos_map( thrift_attr_list)')
  print('  sai_thrift_status_t sai_thrift_remove_qos_map(sai_thrift_object_id_t qos_map_id)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = switch_sai_rpc.Client(protocol)
transport.open()

if cmd == 'sai_thrift_set_port_attribute':
  if len(args) != 2:
    print('sai_thrift_set_port_attribute requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_port_attribute(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_get_port_attribute':
  if len(args) != 1:
    print('sai_thrift_get_port_attribute requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_port_attribute(eval(args[0]),))

elif cmd == 'sai_thrift_get_port_stats':
  if len(args) != 3:
    print('sai_thrift_get_port_stats requires 3 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_port_stats(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'sai_thrift_clear_port_all_stats':
  if len(args) != 1:
    print('sai_thrift_clear_port_all_stats requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_clear_port_all_stats(eval(args[0]),))

elif cmd == 'sai_thrift_create_port':
  if len(args) != 1:
    print('sai_thrift_create_port requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_port(eval(args[0]),))

elif cmd == 'sai_thrift_create_bridge':
  if len(args) != 1:
    print('sai_thrift_create_bridge requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_bridge(eval(args[0]),))

elif cmd == 'sai_thrift_create_bridge_port':
  if len(args) != 1:
    print('sai_thrift_create_bridge_port requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_bridge_port(eval(args[0]),))

elif cmd == 'sai_thrift_create_fdb_entry':
  if len(args) != 2:
    print('sai_thrift_create_fdb_entry requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_fdb_entry(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_delete_fdb_entry':
  if len(args) != 1:
    print('sai_thrift_delete_fdb_entry requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_delete_fdb_entry(eval(args[0]),))

elif cmd == 'sai_thrift_flush_fdb_entries':
  if len(args) != 1:
    print('sai_thrift_flush_fdb_entries requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_flush_fdb_entries(eval(args[0]),))

elif cmd == 'sai_thrift_create_vlan':
  if len(args) != 1:
    print('sai_thrift_create_vlan requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_vlan(eval(args[0]),))

elif cmd == 'sai_thrift_delete_vlan':
  if len(args) != 1:
    print('sai_thrift_delete_vlan requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_delete_vlan(eval(args[0]),))

elif cmd == 'sai_thrift_get_vlan_stats':
  if len(args) != 3:
    print('sai_thrift_get_vlan_stats requires 3 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_vlan_stats(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'sai_thrift_create_vlan_member':
  if len(args) != 1:
    print('sai_thrift_create_vlan_member requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_vlan_member(eval(args[0]),))

elif cmd == 'sai_thrift_remove_vlan_member':
  if len(args) != 1:
    print('sai_thrift_remove_vlan_member requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_vlan_member(eval(args[0]),))

elif cmd == 'sai_thrift_get_vlan_attribute':
  if len(args) != 1:
    print('sai_thrift_get_vlan_attribute requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_vlan_attribute(eval(args[0]),))

elif cmd == 'sai_thrift_create_virtual_router':
  if len(args) != 1:
    print('sai_thrift_create_virtual_router requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_virtual_router(eval(args[0]),))

elif cmd == 'sai_thrift_remove_virtual_router':
  if len(args) != 1:
    print('sai_thrift_remove_virtual_router requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_virtual_router(eval(args[0]),))

elif cmd == 'sai_thrift_create_route':
  if len(args) != 2:
    print('sai_thrift_create_route requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_route(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_remove_route':
  if len(args) != 1:
    print('sai_thrift_remove_route requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_route(eval(args[0]),))

elif cmd == 'sai_thrift_create_router_interface':
  if len(args) != 1:
    print('sai_thrift_create_router_interface requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_router_interface(eval(args[0]),))

elif cmd == 'sai_thrift_remove_router_interface':
  if len(args) != 1:
    print('sai_thrift_remove_router_interface requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_router_interface(eval(args[0]),))

elif cmd == 'sai_thrift_create_next_hop':
  if len(args) != 1:
    print('sai_thrift_create_next_hop requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_next_hop(eval(args[0]),))

elif cmd == 'sai_thrift_remove_next_hop':
  if len(args) != 1:
    print('sai_thrift_remove_next_hop requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_next_hop(eval(args[0]),))

elif cmd == 'sai_thrift_create_next_hop_group':
  if len(args) != 1:
    print('sai_thrift_create_next_hop_group requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_next_hop_group(eval(args[0]),))

elif cmd == 'sai_thrift_remove_next_hop_group':
  if len(args) != 1:
    print('sai_thrift_remove_next_hop_group requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_next_hop_group(eval(args[0]),))

elif cmd == 'sai_thrift_add_next_hop_to_group':
  if len(args) != 2:
    print('sai_thrift_add_next_hop_to_group requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_add_next_hop_to_group(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_remove_next_hop_from_group':
  if len(args) != 2:
    print('sai_thrift_remove_next_hop_from_group requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_next_hop_from_group(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_create_lag':
  if len(args) != 1:
    print('sai_thrift_create_lag requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_lag(eval(args[0]),))

elif cmd == 'sai_thrift_remove_lag':
  if len(args) != 1:
    print('sai_thrift_remove_lag requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_lag(eval(args[0]),))

elif cmd == 'sai_thrift_create_lag_member':
  if len(args) != 1:
    print('sai_thrift_create_lag_member requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_lag_member(eval(args[0]),))

elif cmd == 'sai_thrift_remove_lag_member':
  if len(args) != 1:
    print('sai_thrift_remove_lag_member requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_lag_member(eval(args[0]),))

elif cmd == 'sai_thrift_create_stp_entry':
  if len(args) != 1:
    print('sai_thrift_create_stp_entry requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_stp_entry(eval(args[0]),))

elif cmd == 'sai_thrift_remove_stp_entry':
  if len(args) != 1:
    print('sai_thrift_remove_stp_entry requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_stp_entry(eval(args[0]),))

elif cmd == 'sai_thrift_set_stp_port_state':
  if len(args) != 3:
    print('sai_thrift_set_stp_port_state requires 3 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_stp_port_state(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'sai_thrift_get_stp_port_state':
  if len(args) != 2:
    print('sai_thrift_get_stp_port_state requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_stp_port_state(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_create_neighbor_entry':
  if len(args) != 2:
    print('sai_thrift_create_neighbor_entry requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_neighbor_entry(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_remove_neighbor_entry':
  if len(args) != 1:
    print('sai_thrift_remove_neighbor_entry requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_neighbor_entry(eval(args[0]),))

elif cmd == 'sai_thrift_create_switch':
  if len(args) != 1:
    print('sai_thrift_create_switch requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_switch(eval(args[0]),))

elif cmd == 'sai_thrift_get_switch_attribute':
  if len(args) != 1:
    print('sai_thrift_get_switch_attribute requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_switch_attribute(eval(args[0]),))

elif cmd == 'sai_thrift_get_port_list_by_front_port':
  if len(args) != 0:
    print('sai_thrift_get_port_list_by_front_port requires 0 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_port_list_by_front_port())

elif cmd == 'sai_thrift_get_cpu_port_id':
  if len(args) != 0:
    print('sai_thrift_get_cpu_port_id requires 0 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_cpu_port_id())

elif cmd == 'sai_thrift_get_default_trap_group':
  if len(args) != 0:
    print('sai_thrift_get_default_trap_group requires 0 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_default_trap_group())

elif cmd == 'sai_thrift_get_default_router_id':
  if len(args) != 0:
    print('sai_thrift_get_default_router_id requires 0 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_default_router_id())

elif cmd == 'sai_thrift_get_port_id_by_front_port':
  if len(args) != 1:
    print('sai_thrift_get_port_id_by_front_port requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_port_id_by_front_port(args[0],))

elif cmd == 'sai_thrift_set_switch_attribute':
  if len(args) != 1:
    print('sai_thrift_set_switch_attribute requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_switch_attribute(eval(args[0]),))

elif cmd == 'sai_thrift_create_hostif':
  if len(args) != 1:
    print('sai_thrift_create_hostif requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_hostif(eval(args[0]),))

elif cmd == 'sai_thrift_remove_hostif':
  if len(args) != 1:
    print('sai_thrift_remove_hostif requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_hostif(eval(args[0]),))

elif cmd == 'sai_thrift_create_hostif_trap_group':
  if len(args) != 1:
    print('sai_thrift_create_hostif_trap_group requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_hostif_trap_group(eval(args[0]),))

elif cmd == 'sai_thrift_remove_hostif_trap_group':
  if len(args) != 1:
    print('sai_thrift_remove_hostif_trap_group requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_hostif_trap_group(eval(args[0]),))

elif cmd == 'sai_thrift_create_hostif_trap':
  if len(args) != 1:
    print('sai_thrift_create_hostif_trap requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_hostif_trap(eval(args[0]),))

elif cmd == 'sai_thrift_remove_hostif_trap':
  if len(args) != 1:
    print('sai_thrift_remove_hostif_trap requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_hostif_trap(eval(args[0]),))

elif cmd == 'sai_thrift_set_hostif_trap':
  if len(args) != 2:
    print('sai_thrift_set_hostif_trap requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_hostif_trap(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_set_hostif_trap_group':
  if len(args) != 2:
    print('sai_thrift_set_hostif_trap_group requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_hostif_trap_group(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_create_acl_table':
  if len(args) != 1:
    print('sai_thrift_create_acl_table requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_acl_table(eval(args[0]),))

elif cmd == 'sai_thrift_delete_acl_table':
  if len(args) != 1:
    print('sai_thrift_delete_acl_table requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_delete_acl_table(eval(args[0]),))

elif cmd == 'sai_thrift_create_acl_entry':
  if len(args) != 1:
    print('sai_thrift_create_acl_entry requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_acl_entry(eval(args[0]),))

elif cmd == 'sai_thrift_delete_acl_entry':
  if len(args) != 1:
    print('sai_thrift_delete_acl_entry requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_delete_acl_entry(eval(args[0]),))

elif cmd == 'sai_thrift_create_acl_counter':
  if len(args) != 1:
    print('sai_thrift_create_acl_counter requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_acl_counter(eval(args[0]),))

elif cmd == 'sai_thrift_delete_acl_counter':
  if len(args) != 1:
    print('sai_thrift_delete_acl_counter requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_delete_acl_counter(eval(args[0]),))

elif cmd == 'sai_thrift_get_acl_counter_attribute':
  if len(args) != 2:
    print('sai_thrift_get_acl_counter_attribute requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_acl_counter_attribute(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_create_mirror_session':
  if len(args) != 1:
    print('sai_thrift_create_mirror_session requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_mirror_session(eval(args[0]),))

elif cmd == 'sai_thrift_remove_mirror_session':
  if len(args) != 1:
    print('sai_thrift_remove_mirror_session requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_mirror_session(eval(args[0]),))

elif cmd == 'sai_thrift_create_policer':
  if len(args) != 1:
    print('sai_thrift_create_policer requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_policer(eval(args[0]),))

elif cmd == 'sai_thrift_remove_policer':
  if len(args) != 1:
    print('sai_thrift_remove_policer requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_policer(eval(args[0]),))

elif cmd == 'sai_thrift_get_policer_stats':
  if len(args) != 2:
    print('sai_thrift_get_policer_stats requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_policer_stats(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_create_scheduler_profile':
  if len(args) != 1:
    print('sai_thrift_create_scheduler_profile requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_scheduler_profile(eval(args[0]),))

elif cmd == 'sai_thrift_remove_scheduler_profile':
  if len(args) != 1:
    print('sai_thrift_remove_scheduler_profile requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_scheduler_profile(eval(args[0]),))

elif cmd == 'sai_thrift_get_queue_stats':
  if len(args) != 3:
    print('sai_thrift_get_queue_stats requires 3 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_queue_stats(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'sai_thrift_clear_queue_stats':
  if len(args) != 3:
    print('sai_thrift_clear_queue_stats requires 3 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_clear_queue_stats(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'sai_thrift_set_queue_attribute':
  if len(args) != 2:
    print('sai_thrift_set_queue_attribute requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_queue_attribute(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_create_buffer_profile':
  if len(args) != 1:
    print('sai_thrift_create_buffer_profile requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_buffer_profile(eval(args[0]),))

elif cmd == 'sai_thrift_create_pool_profile':
  if len(args) != 1:
    print('sai_thrift_create_pool_profile requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_pool_profile(eval(args[0]),))

elif cmd == 'sai_thrift_set_priority_group_attribute':
  if len(args) != 2:
    print('sai_thrift_set_priority_group_attribute requires 2 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_set_priority_group_attribute(eval(args[0]),eval(args[1]),))

elif cmd == 'sai_thrift_get_pg_stats':
  if len(args) != 3:
    print('sai_thrift_get_pg_stats requires 3 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_get_pg_stats(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'sai_thrift_create_wred_profile':
  if len(args) != 1:
    print('sai_thrift_create_wred_profile requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_wred_profile(eval(args[0]),))

elif cmd == 'sai_thrift_remove_wred_profile':
  if len(args) != 1:
    print('sai_thrift_remove_wred_profile requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_wred_profile(eval(args[0]),))

elif cmd == 'sai_thrift_create_qos_map':
  if len(args) != 1:
    print('sai_thrift_create_qos_map requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_create_qos_map(eval(args[0]),))

elif cmd == 'sai_thrift_remove_qos_map':
  if len(args) != 1:
    print('sai_thrift_remove_qos_map requires 1 args')
    sys.exit(1)
  pp.pprint(client.sai_thrift_remove_qos_map(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
